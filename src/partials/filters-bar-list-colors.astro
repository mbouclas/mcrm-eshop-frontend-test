
---
import {IAggregationBucket} from "@models/products.model";
import {PropertiesService} from "@services/properties.service";
import {optimizeCloudinaryImage} from "@helpers/cloudinary.helper";
export interface IFiltersBarListColorsProps {
    agg: IAggregationBucket;

    }

const {agg} = Astro.props as IFiltersBarListColorsProps;
const service = new PropertiesService();
const allColors = await service.getPropertyValues({slug: 'color'});
agg.results = agg.results.map(res => {
    const color = allColors.find(c => c.code === res.key);
    if (color) {
        return {
            ...res,
            ...color
        };
    }

    return res;
});

---
<div>
    <fieldset>
        <legend class="block text-sm font-medium text-gray-900">Color</legend>
        <div class="grid grid-cols-5 gap-2">
            {agg.results.map(item => (

                            <a href="#" @click.prevent="filter(item)" title={`${item.name} (${item.doc_count})`}>
                                {!item.image && (
                <div class={`h-6 w-6 border border-[${item.color}] flex rounded-full items-center justify-center`}
                     style={`border-color:${item.color}`}>
                    <div class={`h-3 w-3 rounded-full`} style={`background-color:${item.color}`}></div>
                </div>
                                )}
                                {item.image && (
                                    <div>
                                        <img src={optimizeCloudinaryImage(item.image, 20, 20)} width="20" height="20" alt={item.name} class="rounded rounded-full" />
                                    </div>
                                )}

                            </a>

            ))}
        </div>
    </fieldset>
</div>
