---
const { totalPages, baseURL, currentPage, standAlone = false } = Astro.props

let arrayOfPages = []
for (let i = 1; i <= totalPages; i++) {
    arrayOfPages.push(i)
}
const next = (currentPage === totalPages) ? null : currentPage + 1;
const previous = (currentPage === 1) ? null : currentPage - 1;
function pageNumbers(count: number, current: number) {
    const shownPages = 5
    let pages = []
    if (count <= shownPages) {
        pages = arrayOfPages.slice(0, count)
    } else if (count > shownPages) {
        if (
            current < shownPages &&
            (count - 2 === shownPages || count - 1 === shownPages)
        ) {
            pages.push(...arrayOfPages)
        } else if (
            current < shownPages &&
            (count - 2 !== shownPages || count - 1 !== shownPages)
        ) {
            pages.push(...arrayOfPages.slice(0, 5), "...", count)
        } else if (current >= shownPages && current < count - shownPages) {
            pages.push(current - 1, current, current + 1, "...", count)
        } else if (current >= shownPages && current >= count - shownPages) {
            if (count - 2 === shownPages || count - 1 === shownPages) {
                pages.push(...arrayOfPages)
            } else if (current === count) {
                pages.push(1, "...", count - 2, count - 1, count)
            } else {
                pages.push(1, "...", current - 1, current, current + 1)
            }
        }
    }

    return pages
}

const constructUrl = (page) => {
    if (page === 1) {
        return baseURL
    }
    return baseURL + `/${page}`
}


---
<nav class="flex items-center justify-between border-t border-gray-200 px-4 mx-4 my-4 sm:px-0">

    <div class="-mt-px flex w-0 flex-1">
        {previous && (
        <a href={constructUrl(previous)} class="inline-flex items-center border-t-2 border-transparent pr-1 pt-4 text-sm font-medium text-gray-500 hover:border-gray-300 hover:text-gray-700">
            <svg class="mr-3 h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                <path fill-rule="evenodd" d="M18 10a.75.75 0 01-.75.75H4.66l2.1 1.95a.75.75 0 11-1.02 1.1l-3.5-3.25a.75.75 0 010-1.1l3.5-3.25a.75.75 0 111.02 1.1l-2.1 1.95h12.59A.75.75 0 0118 10z" clip-rule="evenodd" />
            </svg>
            Previous
        </a>
        )}
    </div>

    <ul class="hidden md:-mt-px md:flex">
        {
            pageNumbers(totalPages, currentPage).map((page) => (
                    <li class="page">
                        {page !== "..." ? (
                                <a
                                        class="inline-flex items-center border-t-2 border-transparent px-4 pt-4 text-sm font-medium text-gray-500"
                                        class:list={[currentPage === page ? "border-indigo-500 text-indigo-600" : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300"]}
                                        href={constructUrl(page)}
                                >
                                    {page.toString()}
                                </a>
                        ) : (
                                <span>{page}</span>
                        )}
                    </li>
            ))
        }

    </ul>

    <div class="-mt-px flex w-0 flex-1 justify-end">
        {next && (
        <a href={constructUrl(next)} class="inline-flex items-center border-t-2 border-transparent pl-1 pt-4 text-sm font-medium text-gray-500 hover:border-gray-300 hover:text-gray-700">
            Next
            <svg class="ml-3 h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                <path fill-rule="evenodd" d="M2 10a.75.75 0 01.75-.75h12.59l-2.1-1.95a.75.75 0 111.02-1.1l3.5 3.25a.75.75 0 010 1.1l-3.5 3.25a.75.75 0 11-1.02-1.1l2.1-1.95H2.75A.75.75 0 012 10z" clip-rule="evenodd" />
            </svg>
        </a>
        )}
    </div>

</nav>


